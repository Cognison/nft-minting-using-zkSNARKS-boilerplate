// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var SquareVerifier = artifacts.require("verifier.sol");

contract('TestSquareVerifier', accounts => {

    const account_one = accounts[0];

    const proof = {
        "proof": {
            "a": ["0x2a3fc069f8c2d68bd1d880d9574a59075abb198e3e00d6f9c7498959b2752c95", "0x0462825d642c7423cde214ab315e172b0fe00cef2264e8dba431f3079535326f"],
            "b": [["0x23179b79ce1afa65c63c2588ba872d0cf685757eeb7f0187f2e3ffcb9eb74085", "0x0772e9d7e758a8c6c846b0ead1c757c46cb463dc5d5303c7562798a7d28ff7c2"], ["0x3023d852368679106ba60f4bfa1bb40f588dc7c985b8b4fcbb577143249d9d3b", "0x09fa696c836ce51283989dc05dff0f21a05106c82ccc535cbf32b282f21d9d0b"]],
            "c": ["0x1685ef45c27d3cea7cdf4bc400c455bdec0e22ab6d8cd2f834e66665cc9ee271", "0x2929a7bddb48266318b0daa9a65e43c10211bc4601e08c26aba2d3d4bbf54fe6"]
        },
        "inputs": ["0x0000000000000000000000000000000000000000000000000000000000000009", "0x0000000000000000000000000000000000000000000000000000000000000001"]
    };

    
    describe('SquareVerifier tests', function () {

        beforeEach(async function () { 
            this.contract = 
            await SquareVerifier.new({from: account_one});
        })

        // Test verification with correct proof
        // - use the contents from proof.json generated from zokrates steps
        it("verification with correct proof", async function () { 

            let valid = await this.contract.verifyTx.call(proof.proof.a, proof.proof.b, proof.proof.c, proof.inputs, {from: account_one});

            assert.equal(valid, true, "verification with correct proof");
        })

        // Test verification with incorrect proof
        it('verification with incorrect proof', async function () { 

            let valid = await this.contract.verifyTx.call(proof.proof.a, proof.proof.b, proof.proof.c, [4,7], {from: account_one});

            assert.equal(valid, false, "verification with incorrect proof");            
        })

        
    });
})